name: tailor-user
on:
  workflow_dispatch:
    inputs:
      user_id:    { description: "Supabase user id", required: true }
      request_id: { description: "job_requests id", required: true }

env:
  PYTHONPATH: ${{ github.workspace }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install deps
        run: pip install -r requirements.txt python-docx requests pyyaml beautifulsoup4

      - name: Fetch user's latest resume
        run: python scripts/fetch_user_assets.py --user "${{ github.event.inputs.user_id }}"

      - name: Parse resume -> upsert profiles row
        run: python scripts/parse_resume.py --user "${{ github.event.inputs.user_id }}"

      - name: Crawl targets
        run: python scripts/crawl.py

      - name: Rank for this user
        run: python scripts/rank.py --user "${{ github.event.inputs.user_id }}"

      - name: Upload shortlist to Supabase Storage (outputs/<uid>/scores.json)
        run: |
          curl -sS -X POST \
            "${SUPABASE_URL}/storage/v1/object/outputs/${{ github.event.inputs.user_id }}/scores.json" \
            -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
            -H "Content-Type: application/json" \
            -H "x-upsert: true" \
            --data-binary @run/scores.json

      - name: Mark job_requests as done
        run: |
          curl -sS -X PATCH \
            "${SUPABASE_URL}/rest/v1/job_requests?id=eq.${{ github.event.inputs.request_id }}" \
            -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
            -H "apikey: ${SUPABASE_SERVICE_ROLE_KEY}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            --data '{"status":"done"}' || true
